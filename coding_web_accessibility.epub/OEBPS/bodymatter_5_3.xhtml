<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="ja" lang="ja">
    <head>
        <meta charset="utf-8" />
        
        <link rel="stylesheet" href="style.css" type="text/css" />

        <title>5-2 ヒントをちょうだい！</title>
    </head>
    <body class="bodymatter" epub:type="bodymatter">
        <h2 id="toc_index_1">5-2 ヒントをちょうだい！</h2>

<p>隠しておいたコンテンツを見せる（「いないいないばあ！」）べきタイミングは、ユーザーが特定のアクションを実行した後です。この例では、フォームの入力項目に情報を入力するためのヒントをアクセシブルな方法で提供する方法を探っていきましょう。このような<strong>いないいないばあ</strong>テクニックの使用には、2つのメリットがあります。</p>

<ol>
<li>フォームから無駄を排除し、複雑でわかりにくい外観にならないようにする。</li>
<li>個々のフォーム要素のインタラクション時に動的ヒントが現れることで、ユーザーの注意を引き、選択されている入力項目とヒントとの関係を明確にすることができる。</li>
</ol>

<h3 id="toc_index_2">セットアップ</h3>

<p>それではまず、基本のフォームを作成しましょう。見栄えを整えるからといって、フォーム要素をアクセシブルではない形で使用して良いわけではありません。一番大切なことを忘れないでください。</p>

<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html"><span class="kw">&lt;form&gt;</span>
    <span class="kw">&lt;fieldset&gt;</span>
        <span class="kw">&lt;legend&gt;</span>ログインフォーム<span class="kw">&lt;/legend&gt;</span>
        <span class="kw">&lt;div&gt;</span>
            <span class="kw">&lt;label</span><span class="ot"> for=</span><span class="st">&quot;username&quot;</span><span class="kw">&gt;</span>ユーザー名<span class="kw">&lt;/label&gt;</span>
            <span class="kw">&lt;input</span><span class="ot"> id=</span><span class="st">&quot;username&quot;</span><span class="ot"> type=</span><span class="st">&quot;text&quot;</span><span class="kw">&gt;</span>
        <span class="kw">&lt;/div&gt;</span>
        <span class="kw">&lt;div&gt;</span>
            <span class="kw">&lt;label</span><span class="ot"> for=</span><span class="st">&quot;password&quot;</span><span class="kw">&gt;</span>パスワード<span class="kw">&lt;/label&gt;</span>
            <span class="kw">&lt;input</span><span class="ot"> id=</span><span class="st">&quot;password&quot;</span><span class="ot"> type=</span><span class="st">&quot;password&quot;</span><span class="kw">&gt;</span>
        <span class="kw">&lt;/div&gt;</span>
    <span class="kw">&lt;/fieldset&gt;</span>
    <span class="kw">&lt;button</span><span class="ot"> type=</span><span class="st">&quot;submit&quot;</span><span class="kw">&gt;</span>サイトに入る<span class="kw">&lt;/button&gt;</span>
<span class="kw">&lt;/form&gt;</span></code></pre></div>

<p><img src="img-5-2_01.png" alt="図: ログインフォームというタイトルのフィールドセット。ユーザー名とパスワードという2つの入力欄、「サイトに入る」という送信ボタンがある。" /></p>

<p><code>for</code>属性と<code>id</code>属性に注目してください。これらは、入力項目とそれぞれのラベルの関係性を構築するために使用されています。入力項目とラベルをこのようにコーディングすることには、皆さんもすでに慣れているはずです。その目的は、対応する入力項目がフォーカスを受け取ったときに、ラベルが読み上げられるようにすることです。これによりユーザーは、自分が使用しているのがどの入力項目であるかを知ることができ、どんな場合でも便利です。また、入力項目とラベルをこのように関連づけることによってラベルがインタラクティブになり、コントロールのヒット領域が広がります。これは<code>label</code>要素内に<code>input</code>要素を含めるのと同じ効果があり、ユーザーが入力項目を選択しやすくなります。</p>

<p>多くのスクリーンリーダーは、ラベルテキストの前に<code>&lt;legend&gt;</code>のテキストを読み上げます。このため、2つの情報を組み合わせて読み上げられたときに意味をなすよう注意してください（「ログインフォーム、ユーザー名」など）。</p>

<p><img src="img-5-2_02.png" alt="図: ユーザー名という入力欄にフォーカスを移すと、スクリーンリーダーが「ログインフォーム、ユーザー名」と読み上げる" /></p>

<p>最後に、ヒントの要素をマークアップし、これらを適切な入力項目に結びつければ、このHTMLパズルは完成です。次に、必要時にヒントを表示するよう、CSSをコーディングします。</p>

<div class="sourceCode"><pre class="sourceCode html"><code class="sourceCode html"><span class="kw">&lt;form&gt;</span>
    <span class="kw">&lt;fieldset&gt;</span>
        <span class="kw">&lt;legend&gt;</span>ログインフォーム<span class="kw">&lt;/legend&gt;</span>
        <span class="kw">&lt;div&gt;</span>
            <span class="kw">&lt;label</span><span class="ot"> for=</span><span class="st">&quot;username&quot;</span><span class="kw">&gt;</span>ユーザー名<span class="kw">&lt;/label&gt;</span>
            <span class="kw">&lt;input</span><span class="ot"> id=</span><span class="st">&quot;username&quot;</span><span class="ot"> type=</span><span class="st">&quot;text&quot;</span><span class="ot"> aria-describedby=</span><span class="st">&quot;username-hint&quot;</span><span class="kw">&gt;</span>
            <span class="kw">&lt;div</span><span class="ot"> role=</span><span class="st">&quot;tooltip&quot;</span><span class="ot"> id=</span><span class="st">&quot;username-hint&quot;</span><span class="kw">&gt;</span>ユーザー名には、あなたのEメールアドレスを登録してください<span class="kw">&lt;/div&gt;</span>
        <span class="kw">&lt;/div&gt;</span>
        <span class="kw">&lt;div&gt;</span>
            <span class="kw">&lt;label</span><span class="ot"> for=</span><span class="st">&quot;password&quot;</span><span class="kw">&gt;</span>パスワード<span class="kw">&lt;/label&gt;</span>
            <span class="kw">&lt;input</span><span class="ot"> id=</span><span class="st">&quot;password&quot;</span><span class="ot"> type=</span><span class="st">&quot;password&quot;</span><span class="ot"> aria-describedby=</span><span class="st">&quot;password-hint&quot;</span><span class="kw">&gt;</span>
            <span class="kw">&lt;div</span><span class="ot"> role=</span><span class="st">&quot;tooltip&quot;</span><span class="ot"> id=</span><span class="st">&quot;password-hint&quot;</span><span class="kw">&gt;</span>メールでお送りしたパスワードを入れてください<span class="kw">&lt;/div&gt;</span>
        <span class="kw">&lt;/div&gt;</span>
    <span class="kw">&lt;/fieldset&gt;</span>
    <span class="kw">&lt;button</span><span class="ot"> type=</span><span class="st">&quot;submit&quot;</span><span class="kw">&gt;</span>サイトに入る<span class="kw">&lt;/button&gt;</span>
<span class="kw">&lt;/form&gt;</span></code></pre></div>

<p>ここで、新しい要素と属性の役割を整理しましょう。</p>

<ul>
<li><a href="http://www.marcozehe.de/2008/03/23/easy-aria-tip-2-aria-labelledby-and-aria-describedby/"><code>aria-describedby</code></a>： ラベルの<code>for</code>属性のように、要素間のリレーションシップを作成します。今回の例では、<code>&lt;input&gt;</code>とヒントの<code>&lt;div&gt;</code>とを結びつけています。支援技術は、ブラウザを介し、この<code>id</code>値がつけられたヒントによって、フォームフィールドが説明されているであろうということを知ります。</li>
<li><code>role="tooltip"</code>： ヒント自体に使用し、支援技術に、ヒントをツールチップとして扱うように伝えます。</li>
</ul>

<p>ユーザ名とパスワードのどちらの場合も、ヒントの要素は<code>&lt;input&gt;</code>要素の後の要素になっているため、<a href="http://reference.sitepoint.com/css/adjacentsiblingselector">CSSの隣接セレクタ</a>を使用して、入力項目がフォーカスを受け取ったときにこれを簡単に表示したり隠したりできます。</p>

<p>最初は<code>display: none</code>を使って、ヒントを隠していることに注目してください。これは、<strong>スクリーン上でもスクリーンリーダーにも</strong>不可視にする必要があるためです。</p>

<div class="sourceCode"><pre class="sourceCode css"><code class="sourceCode css"><span class="at">[role=</span><span class="st">&quot;tooltip&quot;</span><span class="at">]</span> <span class="kw">{</span>
    <span class="kw">background:</span> orange<span class="kw">;</span>
    <span class="kw">color:</span> <span class="dt">white</span><span class="kw">;</span>
    <span class="kw">padding:</span> <span class="dt">0.25em</span><span class="kw">;</span>
    <span class="kw">display:</span> <span class="dt">none</span><span class="kw">;</span>
<span class="kw">}</span>
input<span class="dv">:focus</span> + <span class="at">[role=</span><span class="st">&quot;tooltip&quot;</span><span class="at">]</span> <span class="kw">{</span>
    <span class="kw">display:</span> <span class="dt">block</span><span class="kw">;</span>
<span class="kw">}</span></code></pre></div>

<p>まとめると、ユーザー名の<code>&lt;input&gt;</code>にフォーカスを移すと、最初に<code>&lt;legend&gt;</code>が読み上げられ、続いて<code>&lt;input&gt;</code>に関連づけられたラベルが読み上げられます。続いてヒントテキスト（<code>aria-describedby</code>値によって<code>&lt;input&gt;</code>の<code>id</code>属性に関連づけられたテキスト）が読み上げられます。つまり、「ログインフォーム、ユーザー名、ユーザー名には、あなたのEメールアドレスを登録してください」となります。</p>

<p>視力のあるユーザーが利用できる情報はすべて、スクリーンリーダーユーザーに対して公開されており、論理的な順序で読み上げられます。</p>

<p><strong>注</strong>： 多くの場合は、入力項目にきちんとラベルがつけられていれば十分であり、<code>&lt;legend&gt;</code>を含めるのはやり過ぎだと考えられています。自動テストツールの多くでは、<code>&lt;fieldset&gt;</code>に<code>&lt;legend&gt;</code>が含まれていないとエラーが報告されますが、わかりやすくするためには説明が必要かどうかという判断を慎重に行ってください。支援技術はラベルとヒントに加えて<code>legend</code>のテキストも読み上げるため、<a href="http://www.456bereastreet.com/archive/200904/use_the_fieldset_and_legend_elements_to_group_html_form_controls/"><code>&lt;legend&gt;</code>は短くするのがベスト</a>です。</p>

<p><img src="img-5-2_03.png" alt="図: ユーザー名の入力欄にフォーカスを移すと、「ユーザー名には、あなたのEメールアドレスを登録してください」というツールチップが表示される" /></p>

<p>キーボードユーザーのことも忘れてはいけません！　<code>:focus</code>疑似クラスを使ってヒントの可視性を切り替えると、キーボードユーザーが（通常は<kbd>Tab</kbd>キーを使って）入力項目にフォーカスを合わせたときにヒントが表示されます。</p>

<p><img src="img-5-2_04.png" alt="図: ユーザー名の入力欄にフォーカスを移すと、スクリーンリーダーが「ログインフォーム、ユーザー名、ユーザー名には、あなたのEメールアドレスを登録してください」と読み上げる" /></p>

<p>ヒントの要素に実際どのようなテキストを指定するかは、コンテキストと、アプリケーションのデータモデルの状態によります。これを判断するのはJavaScriptまたはサーバーサイドプログラミング言語の仕事です。いずれにしても、HTML、CSS、そして多少のARIAだけで、こうしたヒントを伝えるためのアクセシブルで再利用可能なパターンを作ることができました。</p>

<p>この例に似た<a href="http://heydonworks.com/practical_aria_examples/#input-tooltip">実際に動くデモ</a>を用意しましたので、参考にしてください。</p>

    </body>
</html>